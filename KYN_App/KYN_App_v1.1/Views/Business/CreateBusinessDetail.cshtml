@model KYN_App_v1._1.Models.CreateBusinessViewModel

@{
    ViewBag.Title = "CreateBusinessDetail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@section Scripts {
    <script>

        function BusinessCategoryChanged() {
            var businessCategoryID = $('#ddlCategory').val();
            $.ajax({
                url: '/Business/FillBusinessSubCategories',
                type: "GET",
                dataType: "JSON",
                data: { businessCategoryID: businessCategoryID },
                success: function (subCategories) {
                    $("#ddlSubCategory").html(""); // clear before appending new list
                    $("#ddlSubCategory").append(
                            $('<option></option>').val(0).html("Select Business Sub Category"));
                    $.each(subCategories, function (i, subCategory) {
                        $("#ddlSubCategory").append(
                            $('<option></option>').val(subCategory.ID).html(subCategory.SubCategoryName));
                    });
                }
            });
        }

        function BusinessSubCategoryChanged() {
            var subCategoryID = $('#ddlSubCategory').val();
            $.ajax({
                url: '/Business/FillBusinessDetailedCategories',
                type: "GET",
                dataType: "JSON",
                data: { subCategoryID: subCategoryID },
                success: function (detailCategories) {
                    $("#ddlDetailCategory").html(""); // clear before appending new list
                    $("#ddlDetailCategory").append(
                            $('<option></option>').val(0).html("Select Business Detail Category"));
                    $.each(detailCategories, function (i, detailCategory) {
                        $("#ddlDetailCategory").append(
                            $('<option></option>').val(detailCategory.ID).html(detailCategory.DetailedCategoryName));
                    });
                }
            });
        }


        function AddressTypeChanged() {
            var addressTypeID = $('#ddlAddressType').val();
            $.ajax({
                url: '/Business/FillBuildingInformation',
                type: "GET",
                dataType: "JSON",
                data: { addressTypeID: addressTypeID },
                success: function (buildings) {
                    $("#ddlBuildings").html(""); // clear before appending new list
                    $("#ddlBuildings").append(
                            $('<option></option>').val(0).html("Select Building"));
                    $.each(buildings, function (i, building) {
                        $("#ddlBuildings").append(
                            $('<option></option>').val(building.ID).html(building.BuildingName));
                    });
                }
            });
        }

        //$(function () {
        //    $('.edit-mode').hide();
        //    $('.edit-user, .cancel-user').on('click', function () {
        //        var tr = $(this).parents('tr:first');
        //        tr.find('.edit-mode, .display-mode').toggle();
        //    });

        //    $('.save-user').on('click', function () {
        //        var tr = $(this).parents('tr:first');
        //        var Name = tr.find("#Name").val();
        //        var SurName = tr.find("#SurName").val();
        //        var UserID = tr.find("#UserID").html();
        //        tr.find("#lblName").text(Name);
        //        tr.find("#lblSurName").text(SurName);
        //        tr.find('.edit-mode, .display-mode').toggle();
        //        var UserModel =
        //        {
        //            "ID": UserID,
        //            "Name": Name,
        //            "SurName": SurName
        //        };
        //        $.ajax({
        //            url: '/User/ChangeUser/',
        //            data: JSON.stringify(UserModel),
        //            type: 'POST',
        //            contentType: 'application/json; charset=utf-8',
        //            success: function (data) {
        //                alert(data);
        //            }
        //        });

        //    });
        //})
    </script>
}




@*<div id="gridContent" style=" padding:20px; ">
        @grid.GetHtml(
            tableStyle: "webgrid-table",
            headerStyle: "webgrid-header",
            footerStyle: "webgrid-footer",
            alternatingRowStyle: "webgrid-alternating-row",
            selectedRowStyle: "webgrid-selected-row",
            rowStyle: "webgrid-row-style",
            mode: WebGridPagerModes.All,
            columns:
                grid.Columns(
                 grid.Column("ID", format: @<text>  <span class="display-mode">@item.CostCenterID </span> <label id="UserID" class="edit-mode">@item.CostCenterID</label> </text>, style: "col1Width" ),
                 grid.Column("Name", "Name", format: @<text>  <span class="display-mode"> <label id="lblName">@item.Name</label> </span> <input type="text" id="Name" value="@item.Name" class="edit-mode" /></text>, style: "col2Width"),
                 grid.Column("Action", format: @<text>
            <button class="edit-user display-mode">Edit</button>
            <button class="save-user edit-mode">Save</button>
            <button class="cancel-user edit-mode">Cancel</button>
                </text>, style: "col3Width", canSort: false)
         ))
    </div>*@

<h2 class="panel-heading">Register your Business <small>It's free!</small> </h2>

@using (Html.BeginForm("CreateBusinessDetail", "Business", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="w3layouts-breadcrumbs text-center">
        <div class="container">
            <span class="agile-breadcrumbs"><a href="/Ghaziabad/Crossings"><i class="fa fa-home home_1"></i></a> / <span>Post your Ad</span></span>
        </div>
    </div>
    <div class="container">
        <div class="col-xs-12 col-sm-12 col-md-12">
            <div class="panel panel-default">

                <div class="panel-heading">
                    <h3 class="well">Business Nature...</h3>
                </div>
                @Html.HiddenFor(c => c.BusinessPrimaryDetail.UserID)
                @Html.HiddenFor(c => c.BusinessPrimaryDetail.UserEmail)

                <div class="panel-body">

                    <div class="row w3layouts-boder12">
                        <div class="form-group col-xs-12 col-sm-12 col-md-10">
                            <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                <div class="form-group">
                                    @Html.DropDownListFor(m => m.BusinessPrimaryDetail.BusinessTypeID, new SelectList(Model.BusinessTypes, "ID", "BusinessTypeName"), "Select Business Type", new { @id = "ddlBusinessType", @class = "dropdown-toggle" })
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                <div class="form-group">
                                    @Html.DropDownListFor(m => m.BusinessPrimaryDetail.CategoryID, new SelectList(Model.BusinessCategories, "ID", "CategoryName"), "Select Business Category", new { @id = "ddlCategory", @class = "dropdown-toggle", @onchange = "BusinessCategoryChanged()" })
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                <div class="form-group">
                                    @Html.DropDownListFor(m => m.BusinessPrimaryDetail.SubCategoryID, new SelectList(Model.BusinessSubCategories, "ID", "SubCategoryName"), "Select Business Sub Category", new { @id = "ddlSubCategory", @class = "dropdown-toggle", @onchange = "BusinessSubCategoryChanged()" })
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                <div class="form-group">
                                    @Html.DropDownListFor(m => m.BusinessPrimaryDetail.DetailedCategoryIDs, new SelectList(Model.BusinessDetailedCategories, "ID", "DetailedCategoryName"), "Select Business Detail Categories", new { @id = "ddlDetailCategory", @class = "dropdown-toggle form-control", @multiple = "true" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel-heading">
                    <h3 class="well">Business Basic Information...</h3>
                </div>
                <div class="panel-body">

                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessPrimaryDetail.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.BusinessPrimaryDetail.Name, new { @id = "txtBusinessName", @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessPrimaryDetail.StartedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="row">
                            <div class="col-xs-12 col-sm-12 col-md-6">
                                <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                                    <div class="form-group">
                                        @Html.EnumDropDownListFor(m => m.BusinessPrimaryDetail.StartedOn.StartedMonth, "Select Month", new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                                    <div class="form-group">
                                        @Html.DropDownListFor(m => m.BusinessPrimaryDetail.StartedOn.Year, Enumerable.Range(DateTime.Now.Year - 20, 21).Select(year => new SelectListItem { Value = year.ToString(System.Globalization.CultureInfo.InvariantCulture), Text = year.ToString(System.Globalization.CultureInfo.InvariantCulture) }), new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessPrimaryDetail.From, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="row">
                            <div class="col-xs-12 col-sm-12 col-md-6">
                                <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                                    <div class="form-group">
                                        @Html.DropDownListFor(m => m.BusinessPrimaryDetail.From.Time, Enumerable.Range(01, 12).Select(year => new SelectListItem { Value = year.ToString(), Text = year.ToString() }), new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                                    <div class="form-group">
                                        @Html.EnumDropDownListFor(m => m.BusinessPrimaryDetail.From.TimePeriod, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessPrimaryDetail.To, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="row">
                            <div class="col-xs-12 col-sm-12 col-md-6">
                                <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                                    <div class="form-group">
                                        @Html.DropDownListFor(m => m.BusinessPrimaryDetail.To.Time, Enumerable.Range(01, 12).Select(year => new SelectListItem { Value = year.ToString(), Text = year.ToString() }), new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                                    <div class="form-group">
                                        @Html.EnumDropDownListFor(m => m.BusinessPrimaryDetail.To.TimePeriod, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="panel-heading">
                    <h3 class="well">Business Basic Information...</h3>
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessPrimaryDetail.OfficialContactNumber1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BusinessPrimaryDetail.OfficialContactNumber1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BusinessPrimaryDetail.OfficialContactNumber1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessPrimaryDetail.OfficialContactNumber2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BusinessPrimaryDetail.OfficialContactNumber2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BusinessPrimaryDetail.OfficialContactNumber2, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessPrimaryDetail.BusinessEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BusinessPrimaryDetail.BusinessEmail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BusinessPrimaryDetail.BusinessEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessPrimaryDetail.AddressTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.BusinessPrimaryDetail.AddressTypeID, new SelectList(Model.AddressTypeList, "ID", "AddressTypeName"), "Select Address Type", new { @id = "ddlAddressType", @class = "form-control", @onchange = "AddressTypeChanged()" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessPrimaryDetail.BuildingInformationID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.BusinessPrimaryDetail.BuildingInformationID, new SelectList(Model.BuildingInformationList, "ID", "BuildingName"), "Select Building", new { @id = "ddlBuildings", @class = "form-control" })
                        </div>
                    </div>
                </div>

                <div class="panel-heading">
                    <h3 class="well">Business Sharing Permission...</h3>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="form-group col-xs-12 col-sm-12 col-md-12">
                            <div class="col-xs-12 col-sm-12 col-md-3">
                                <div class="form-group">
                                    <div class="col-md-12 col-sm-10 col-xs-12">
                                        <div class="col-md-10 col-sm-10 col-xs-9">
                                            @Html.LabelFor(model => model.BusinessPrimaryDetail.IsProfilePublic, htmlAttributes: new { @class = "control-label" })
                                        </div>
                                        <div class="checkbox col-md-2 col-sm-2 col-xs-1">
                                            @Html.CheckBoxFor(m => m.BusinessPrimaryDetail.IsProfilePublic)
                                            @Html.ValidationMessageFor(model => model.BusinessPrimaryDetail.IsProfilePublic, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-12 col-md-3">
                                <div class="form-group">
                                    <div class="col-md-12 col-sm-10 col-xs-12">
                                        <div class="col-md-10 col-sm-10 col-xs-9">
                                            @Html.LabelFor(model => model.BusinessPrimaryDetail.CanShareContactDetail, htmlAttributes: new { @class = "control-label" })
                                        </div>
                                        <div class="checkbox col-md-2 col-sm-2 col-xs-1">
                                            @Html.CheckBoxFor(m => m.BusinessPrimaryDetail.CanShareContactDetail)
                                            @Html.ValidationMessageFor(model => model.BusinessPrimaryDetail.CanShareContactDetail, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-12 col-md-3">
                                <div class="form-group">
                                    <div class="col-md-12 col-sm-10 col-xs-12">
                                        <div class="col-md-10 col-sm-10 col-xs-9">
                                            @Html.LabelFor(model => model.BusinessPrimaryDetail.CanShareEmailAddress, htmlAttributes: new { @class = "control-label" })
                                        </div>
                                        <div class="checkbox col-md-2 col-sm-2 col-xs-1">
                                            @Html.CheckBoxFor(m => m.BusinessPrimaryDetail.CanShareEmailAddress)
                                            @Html.ValidationMessageFor(model => model.BusinessPrimaryDetail.CanShareEmailAddress, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-12 col-md-3">
                                <div class="form-group">
                                    <div class="col-md-12 col-sm-10 col-xs-12">
                                        <div class="col-md-10 col-sm-10 col-xs-9">
                                            @Html.LabelFor(model => model.BusinessPrimaryDetail.CanShareAddress, htmlAttributes: new { @class = "control-label" })
                                        </div>
                                        <div class="checkbox col-md-2 col-sm-2 col-xs-1">
                                            @Html.CheckBoxFor(m => m.BusinessPrimaryDetail.CanShareAddress)
                                            @Html.ValidationMessageFor(model => model.BusinessPrimaryDetail.CanShareAddress, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel-heading">
                    <h3 class="well">Business Further Detail...</h3>
                </div>
                <div class="panel-body">


                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessPrimaryDetail.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.BusinessPrimaryDetail.Description, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.BusinessPrimaryDetail.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessPrimaryDetail.AnyOtherDetail, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.BusinessPrimaryDetail.AnyOtherDetail, new { htmlAttributes = new { @class = "mess" } })
                            @Html.ValidationMessageFor(model => model.BusinessPrimaryDetail.AnyOtherDetail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                @*<div class="panel-heading">
                        <h3 class="panel-title">Upload Images...</h3>
                    </div>*@

                @*<div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.file, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.file, new { htmlAttributes = new { @class = "form-control", @type = "file" } })
                                @Html.ValidationMessageFor(model => model.file, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10 text-success">
                                @ViewBag.FileStatus
                            </div>
                        </div>
                    </div>*@


                <div class="form-group">
                    <div class="col-md-10">
                        <input type="submit" class="btn btn-default form-control" value="Create Business Detail" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

